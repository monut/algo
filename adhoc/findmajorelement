// Moors voting algorithm
/*
  scan from left to right. If same increment the count
  decrement the count if not same 
  if count becomes zero then new i becomes the idx and start from count 1
  this will give a majority cadidate. Need to scan again to verify if the
  majority candidate is majortiy element
 */
int find_majority_element(vector<int>& arr){
  int idx = 0;
  int sz = arr.size();
  int count = 1;
  for(int i = 1; i < sz, i++){
    if(arr[idx] == arr[i]){
      count++;
    }
    
    if(count == 0){
      idx = i;
      count = 1;
    }
  }
  
  // break out if cnt is greater than sz/2 that will 
  // be majority
  int cnt = 0;
  for(int i = 0; i < sz && cnt < (sz/2 + 1); i++){
    if(arr[i] == arr[idx])
      cnt++;
  }
  return (cnt > (sz/2 +1))? idx : -1;
}

int main(){
  vector<int> vec = {4,4,3,2,1,4,4};
   int idx = find_majority_element(vec);
   if(idx >= 0) {
    cout << " Majority element " <<  vec[idx] << endl;
   else
    cout << "No majority element" << endl;
}
